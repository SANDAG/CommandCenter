<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.1.xsd
        ">

	<bean id="waffleWindowsAuthProvider" class="waffle.windows.auth.impl.WindowsAuthProviderImpl" />

	<bean id="negotiateSecurityFilterProvider" class="waffle.servlet.spi.NegotiateSecurityFilterProvider">
		<constructor-arg ref="waffleWindowsAuthProvider" />
	</bean>

	<bean id="basicSecurityFilterProvider" class="waffle.servlet.spi.BasicSecurityFilterProvider">
		<constructor-arg ref="waffleWindowsAuthProvider" />
	</bean>

	<bean id="waffleSecurityFilterProviderCollection" class="waffle.servlet.spi.SecurityFilterProviderCollection">
		<constructor-arg>
			<list>
				<ref bean="negotiateSecurityFilterProvider" />
				<ref bean="basicSecurityFilterProvider" />
			</list>
		</constructor-arg>
	</bean>

	<sec:http entry-point-ref="negotiateSecurityFilterEntryPoint"
		use-expressions="true">
		<!-- TODO may want to remove RSG development access -->
		<!-- prints all available roles (from a jsp file):
			<%=((waffle.spring.WindowsAuthenticationToken)(request.getUserPrincipal())).getAuthorities()%>
			or with spring security tags:
			<sec:authentication property="principal.authorities"/>
		 -->
		<sec:intercept-url pattern="/admin/**"
			access="hasRole('ROLE_SANDAG\REGIONAL MODELS') or hasRole('ROLE_I-RSG\DEVELOPERS')" />
		<!-- TODO check for roles here, too, so not everyone from attached trusted 
			domains can get in? -->
		<sec:intercept-url pattern="/**" access="isFullyAuthenticated()" />
		<sec:custom-filter ref="waffleNegotiateSecurityFilter"
			position="BASIC_AUTH_FILTER" />
	</sec:http>

	<bean id="negotiateSecurityFilterEntryPoint" class="waffle.spring.NegotiateSecurityFilterEntryPoint">
		<property name="Provider" ref="waffleSecurityFilterProviderCollection" />
	</bean>

	<!-- default provider, not used but needed -->
	<sec:authentication-manager alias="authenticationProvider" />

	<bean id="waffleNegotiateSecurityFilter" class="waffle.spring.NegotiateSecurityFilter">
		<property name="Provider" ref="waffleSecurityFilterProviderCollection" />
	</bean>

</beans>